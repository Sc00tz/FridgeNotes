name: Build and Push FridgeNotes

on:
  push:
    branches: [ main, master, Shared-Notes-Hiding, drag-n-drop-fixes ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GHCR_TOKEN }}
      
    - name: Set image tag based on branch
      id: tag
      run: |
        if [[ "${GITHUB_REF_NAME}" == "main" || "${GITHUB_REF_NAME}" == "master" ]]; then
          echo "tag=latest" >> $GITHUB_OUTPUT
        else
          BRANCH_TAG=$(echo "${GITHUB_REF_NAME}" | tr '[:upper:]' '[:lower:]' | sed 's/[^a-z0-9._-]/-/g')
          echo "tag=${BRANCH_TAG}" >> $GITHUB_OUTPUT
        fi
      
    - name: Build and push Docker image
      run: |
        IMAGE_TAG="ghcr.io/$(echo '${{ github.repository_owner }}' | tr '[:upper:]' '[:lower:]')/fridgenotes"
        docker build --no-cache \
          --label "org.opencontainers.image.source=https://github.com/${{ github.repository }}" \
          --label "org.opencontainers.image.url=https://github.com/${{ github.repository }}" \
          --label "org.opencontainers.image.documentation=https://github.com/${{ github.repository }}" \
          --label "org.opencontainers.image.title=FridgeNotes" \
          --label "org.opencontainers.image.description=Self-hosted note-taking application with real-time collaboration" \
          --label "org.opencontainers.image.vendor=${{ github.repository_owner }}" \
          --label "org.opencontainers.image.version=${{ steps.tag.outputs.tag }}" \
          --label "org.opencontainers.image.revision=${{ github.sha }}" \
          --label "org.opencontainers.image.created=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" \
          -t ${IMAGE_TAG}:${{ steps.tag.outputs.tag }} \
          -t ${IMAGE_TAG}:${{ github.sha }} \
          .
        docker push ${IMAGE_TAG}:${{ steps.tag.outputs.tag }}
        docker push ${IMAGE_TAG}:${{ github.sha }}